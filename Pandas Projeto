import pandas as pd

# Cria um dicionário
dados = {'Estado': ['Santa Catarina', 'Rio de Janeiro', 'Tocantins', 'Bahia', 'Minas Gerais'], 
         'Ano': [2004, 2005, 2006, 2007, 2008], 
         'Taxa Desemprego': [1.5, 1.7, 1.6, 2.4, 2.7]}

# Importa a função DataFrame do Pandas
from pandas import DataFrame

# Converte o dicionário em um dataframe
df = DataFrame(dados)

# Reorganizando as colunas
DataFrame(dados, columns = ['Estado', 'Taxa Desemprego', 'Ano'])

# Criando outro dataframe com os mesmo dados anteriores mas adicionando uma coluna
df2 = DataFrame(dados, 
                columns = ['Estado', 'Taxa Desemprego', 'Taxa Crescimento', 'Ano'], 
                index = ['estado1', 'estado2', 'estado3', 'estado4', 'estado5'])

df2.values

df2.dtypes

# Imprimindo apenas uma coluna do Dataframe
df2['Estado']

# Imprimindo apenas duas colunas do Dataframe- lista de colunas por isso [[ ]]
df2[ ['Taxa Desemprego', 'Ano'] ]

 Filtrando pelo índice
df2.filter(items = ['estado3'], axis = 0)

# Resumo estatístico do Dataframe # Método discribe()
df2.describe()

df2.isna()

# Importando o NumPy
import numpy as np

# Usando o NumPy para alimentar uma das colunas do dataframe
df2['Taxa Crescimento'] = np.arange(5.)

#fatiando base de dados- itens determinados
df2['estado2':'estado4']

#critério de filtro relcional
df2[ df2['Taxa Desemprego'] <= 1.5]

#somente 1 coluna
df2['Taxa Crescimento']

# 2 ou mais colunas
df2[['Estado', 'Taxa Crescimento']]

df2[['Estado', 'Taxa Crescimento', 'Ano']]
